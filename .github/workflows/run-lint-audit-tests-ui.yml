name: UI - Lint, Audit and Tests

on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./mathesar_ui
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
      - id: npm-cache-dir
        run: echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v2
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - run: npm install --no-audit --prefer-offline
      - run: npm run lint

  audit:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./mathesar_ui
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
      - id: npm-cache-dir
        run: echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v2
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - run: npm install
      - run: npm audit

  tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./mathesar_ui
    timeout-minutes: 15
    strategy:
      matrix:
        node-version: [14, 15]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - id: npm-cache-dir
        run: echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v2
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - run: npm install --no-audit --prefer-offline
      - run: npm test
